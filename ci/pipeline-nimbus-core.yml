---
jobs:
- name: renew-lease-nimbus-testbed
  plan:
  - do:
    - in_parallel:
      - get: deployments-src
      - get: every-day
        trigger: true
    - task: extend-lease
      file: deployments-src/ci/tasks/extend-lease-nimbus-testbed.yml
      params:
        TESTBED_NAME: bosh-main-ci
        USER: ((nimbus-user))
        NIMBUS_LOCATION: ((nimbus-location))

- name: create-nimbus-testbed
  plan:
  - do:
    - in_parallel:
      - get: deployments-src
    - put: nimbus-worker
      params:
        template: default
        output: nimbus-worker
        run:
          path: bash
          args:
            - -exc
            - |
              export USER=((nimbus-user))
              export TESTBED_NAME=bosh-main-ci
              /mts/git/bin/nimbus-ctl --testbed kill ${TESTBED_NAME} || true
              /mts/git/bin/nimbus-testbeddeploy \
                  --testbedSpecRubyFile deployments-src/nimbus-testbed/nimbus_vc70_dual_networks.rb \
                  --runName ${TESTBED_NAME} \
                  --lease 7 \
                  --enableIPV6 dual \
                  --ip6AddressType slaac \
                  --context general:nsx \
                  --nimbusLocation ((nimbus-location)) \
                  --resultsDir nimbus-worker
              echo "{}" > nimbus-worker/clean-env
      ensure:
        do:
        - put: testbed-info
          params:
            file: nimbus-worker/testbedInfo.json
        - put: vsphere-v7.0-worker-state-1
          params:
            file: nimbus-worker/clean-env
        - put: vsphere-v7.0-worker-state-2
          params:
            file: nimbus-worker/clean-env

- name: update-vsphere-v7.0-worker
  serial: true
  plan:
    - do:
      - in_parallel:
        - get: concourse
          params: { tarball: false }
        - get: deployments-src
        - get: bosh-cli
        - get: testbed-info
          trigger: true
        - get: vsphere-v7.0-worker-state-1
        - get: vsphere-v7.0-worker-state-2
        - get: bosh-cpi-release
          resource: bosh-vsphere-cpi-release
          params: { tarball: false }
        - get: stemcell
          resource: vsphere-xenial-stemcell
          params: { tarball: false }
        - get: vsphere-v70-worker-secrets-1
        - get: vsphere-v70-worker-secrets-2
      - in_parallel:
        - put: update-vsphere-v7.0-worker-1
          resource: nimbus-worker
          ensure:
            put: vsphere-v7.0-worker-state-1
            params:
              file: update-vsphere-v7.0-worker-1/worker-state.json
          params:
            template: concourse-worker
            output: updated-worker-state
            run:
              path: bash
              args:
                - -ec
                - |
                    sudo apt-get update
                    sudo apt-get install -y build-essential zlibc zlib1g-dev ruby ruby-dev \
                         openssl libxslt-dev libxml2-dev libssl-dev libreadline6 libreadline6-dev \
                         libyaml-dev libsqlite3-dev sqlite3 jq libcurl4-gnutls-dev
                    sudo ./deployments-src/ci/utils
                    ln -s vsphere-v7.0-worker-state-1 worker-state
                    export WORKER_SECRETS="$(bosh int vsphere-v70-worker-secrets-2/secrets.yml)"
                    export ENVIRONMENT_NAME=nimbus
                    sudo -E ./deployments-src/ci/tasks/deploy-worker

        - put: update-vsphere-v7.0-worker-2
          resource: nimbus-worker
          ensure:
            put: vsphere-v7.0-worker-state-2
            params:
              file: update-vsphere-v7.0-worker-2/worker-state.json
          params:
            template: concourse-worker
            output: updated-worker-state
            run:
              path: bash
              args:
                - -ec
                - |
                    sudo apt-get update
                    sudo apt-get install -y build-essential zlibc zlib1g-dev ruby ruby-dev \
                         openssl libxslt-dev libxml2-dev libssl-dev libreadline6 libreadline6-dev \
                         libyaml-dev libsqlite3-dev sqlite3 jq libcurl4-gnutls-dev
                    sudo ./deployments-src/ci/utils
                    ln -s vsphere-v7.0-worker-state-2 worker-state
                    export WORKER_SECRETS="$(bosh int vsphere-v70-worker-secrets-2/secrets.yml)"
                    export ENVIRONMENT_NAME=nimbus
                    sudo -E ./deployments-src/ci/tasks/deploy-worker

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: nimbus-worker
  type: registry-image
  source:
    repository: devtools-docker-local.artifactory.eng.vmware.com/vmware/runway/resourcetypes/nimbus-worker-resource
    tag: latest

- name: file
  type: docker-image
  source:
    repository: aequitas/concourse-file-resource
    tag: latest

resources:
- name: every-day
  type: time
  source:
    interval: 24h

- name: vsphere-v70-worker-secrets-1
  type: file
  source:
    filename: secrets.yml
    content: ((vsphere-v70-worker-secrets-1))

- name: vsphere-v70-worker-secrets-2
  type: file
  source:
    filename: secrets.yml
    content: ((vsphere-v70-worker-secrets-2))

- name: deployments-src
  type: git
  source:
    uri: https://github.com/pivotal-cf/bosh-concourse-deployments.git
    branch: master

- name: testbed-info
  type: gcs-resource
  source:
    bucket: ((deployments_core_bucket_name))
    json_key: ((gcp_credentials_json))
    versioned_file: nimbus/testbed-info.json

- name: vsphere-v7.0-worker-state-1
  type: gcs-resource
  source:
    bucket: ((deployments_core_bucket_name))
    json_key: ((gcp_credentials_json))
    versioned_file: worker/vsphere-v7.0-worker-state-1.json
- name: vsphere-v7.0-worker-state-2
  type: gcs-resource
  source:
    bucket: ((deployments_core_bucket_name))
    json_key: ((gcp_credentials_json))
    versioned_file: worker/vsphere-v7.0-worker-state-2.json
- name: bosh-cli
  type: s3
  source:
    bucket: bosh-cli-artifacts
    regexp: bosh-cli-(\d+\.\d+\.\d+)-linux-amd64
- name: vsphere-xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-vsphere-esxi-ubuntu-xenial-go_agent
- name: concourse
  type: bosh-io-release
  source:
    repository: concourse/concourse-bosh-release
- name: bosh-vsphere-cpi-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh-vsphere-cpi-release
- name: nimbus-worker
  type: nimbus-worker
  icon: worker
  source:
    nimbus_user: ((nimbus-user))
    # wdc Wenatchee, Washington closest to us-west1 (The Dalles, Oregon) which is where bosh main concourse lives
    # https://confluence.eng.vmware.com/display/DevToolsDocKB/Nimbus+CIDR
    nimbus_location: ((nimbus-location))
