#!/bin/bash

set -eu

# env
: ${ENVIRONMENT_NAME:?}
: ${WORKER_SECRETS:?}

set +u
source deployments-src/ci/utils
source /etc/profile.d/chruby.sh
chruby ruby

if [ -d testbed-info ]; then
    # - vcenter_resource_pool
    export WORKER_SECRETS=$(echo -e "$WORKER_SECRETS$(
      bosh int <(jq '.vc[0] | {
        vcenter_address: .ip4,
        vcenter_user: .vimUsername,
        vcenter_password: .vimPassword
      }' testbed-info/testbed-info.json)
    )")

    public_ip=$(curl "$(jq -r '.network[0].gateway' testbed-info/testbed-info.json):4827/nsips")
    net=$(echo "${public_ip}" | jq -r '"\(.ip)/\(.netmask)"')
    subnet=$(ruby -e "require 'ipaddr'; ip = IPAddr.new('${net}'); puts \"#{ip}/#{ip.prefix}\"")
    export WORKER_SECRETS=$(echo -e "${WORKER_SECRETS}\n$(
      bosh int <(echo "${public_ip}" | jq '. | {
        vcenter_public_worker_ip: .ip,
        vcenter_public_gateway: .gateway
      }')
    )\nvcenter_public_cidr: ${subnet}")
fi

cp worker-state/*.json updated-worker-state/worker-state.json

echo "Updating WORKER..."
bosh -n create-env \
  --state updated-worker-state/worker-state.json \
  -v concourse_release_path="$( realpath $PWD/concourse/*.tgz )" \
  -v bosh_cpi_release_path="$( realpath $PWD/bosh-cpi-release/*.tgz )" \
  -v stemcell_path="$( realpath $PWD/stemcell/*.tgz )" \
  -l <( echo "${WORKER_SECRETS}" ) \
  $( echo ${OPTIONAL_FLAGS} ) \
  --vars-store="creds.yml" \
  deployments-src/concourse/workers/${ENVIRONMENT_NAME}/worker.yml

echo "Successfully updated worker!"
